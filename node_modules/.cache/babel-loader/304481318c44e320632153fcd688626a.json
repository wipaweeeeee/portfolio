{"ast":null,"code":"import _slicedToArray from \"/Users/wipawe.sirikolkarn/development/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/wipawe.sirikolkarn/development/portfolio/src/packages/archive/Archive.js\";\nimport React, { useState } from 'react';\n\nvar Airtable = require('airtable');\n\nconst Archive = () => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        content = _useState2[0],\n        setContent = _useState2[1];\n\n  const retrieveContent = () => {\n    var base = new Airtable({\n      apiKey: 'keywJEKrRFRrPEmMI'\n    }).base('appS0UCDSYim1dOsM');\n    base('Work').select().eachPage(function page(records, fetchNextPage) {\n      records.forEach(function (record) {\n        let type = record.get('type');\n        console.log(type);\n      });\n      fetchNextPage();\n    }, function done(err) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n    });\n  }; // console.log(content)\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"hi\");\n};\n\nexport default Archive;","map":{"version":3,"sources":["/Users/wipawe.sirikolkarn/development/portfolio/src/packages/archive/Archive.js"],"names":["React","useState","Airtable","require","Archive","content","setContent","retrieveContent","base","apiKey","select","eachPage","page","records","fetchNextPage","forEach","record","type","get","console","log","done","err","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBAEWH,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,QAEbI,OAFa;AAAA,QAEJC,UAFI;;AAIrB,QAAMC,eAAe,GAAG,MAAM;AAC7B,QAAIC,IAAI,GAAG,IAAIN,QAAJ,CAAa;AAACO,MAAAA,MAAM,EAAE;AAAT,KAAb,EAA4CD,IAA5C,CAAiD,mBAAjD,CAAX;AACAA,IAAAA,IAAI,CAAC,MAAD,CAAJ,CAAaE,MAAb,GAAsBC,QAAtB,CAA+B,SAASC,IAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsC;AAEjED,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAASC,MAAT,EAAiB;AAChC,YAAIC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAW,MAAX,CAAX;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,OALD;AAOAH,MAAAA,aAAa;AAEhB,KAXD,EAWG,SAASO,IAAT,CAAcC,GAAd,EAAmB;AAClB,UAAIA,GAAJ,EAAS;AAAEH,QAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AAAoB;AAAS;AAC3C,KAbD;AAcA,GAhBD,CAJqB,CAwBpB;;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CA3BD;;AA6BA,eAAelB,OAAf","sourcesContent":["import React, { useState } from 'react'; \n\nvar Airtable = require('airtable');\n\nconst Archive = () => {\n\n\tconst [ content, setContent ] = useState({});\n\n\tconst retrieveContent = () => {\n\t\tvar base = new Airtable({apiKey: 'keywJEKrRFRrPEmMI'}).base('appS0UCDSYim1dOsM');\n\t\tbase('Work').select().eachPage(function page(records, fetchNextPage) {\n\n\t\t    records.forEach(function(record) {\n\t\t    \tlet type = record.get('type');\n\n\t\t    \tconsole.log(type)\n\t\t        \n\t\t    });\n\n\t\t    fetchNextPage();\n\n\t\t}, function done(err) {\n\t\t    if (err) { console.error(err); return; }\n\t\t});\n\t}\n\t\n\t\n\n\t // console.log(content)\n\n\treturn <div>hi</div>\n}\n\nexport default Archive;"]},"metadata":{},"sourceType":"module"}