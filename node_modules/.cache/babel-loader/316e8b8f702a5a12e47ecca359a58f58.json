{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar callbackToPromise = require('./callback_to_promise');\n\nfunction Record(table, recordId, recordJson) {\n  this._table = table;\n  this.id = recordId || recordJson.id;\n  this.setRawJson(recordJson);\n  this.save = callbackToPromise(save, this);\n  this.patchUpdate = callbackToPromise(patchUpdate, this);\n  this.putUpdate = callbackToPromise(putUpdate, this);\n  this.destroy = callbackToPromise(destroy, this);\n  this.fetch = callbackToPromise(fetch, this);\n  this.updateFields = this.patchUpdate;\n  this.replaceFields = this.putUpdate;\n}\n\nRecord.prototype.getId = function () {\n  return this.id;\n};\n\nRecord.prototype.get = function (columnName) {\n  return this.fields[columnName];\n};\n\nRecord.prototype.set = function (columnName, columnValue) {\n  this.fields[columnName] = columnValue;\n};\n\nfunction save(done) {\n  this.putUpdate(this.fields, done);\n}\n\nfunction patchUpdate(cellValuesByName, opts, done) {\n  var that = this;\n\n  if (!done) {\n    done = opts;\n    opts = {};\n  }\n\n  var updateBody = assign({\n    fields: cellValuesByName\n  }, opts);\n\n  this._table._base.runAction('patch', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, updateBody, function (err, response, results) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    that.setRawJson(results);\n    done(null, that);\n  });\n}\n\nfunction putUpdate(cellValuesByName, opts, done) {\n  var that = this;\n\n  if (!done) {\n    done = opts;\n    opts = {};\n  }\n\n  var updateBody = assign({\n    fields: cellValuesByName\n  }, opts);\n\n  this._table._base.runAction('put', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, updateBody, function (err, response, results) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    that.setRawJson(results);\n    done(null, that);\n  });\n}\n\nfunction destroy(done) {\n  var that = this;\n\n  this._table._base.runAction('delete', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, null, function (err) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    done(null, that);\n  });\n}\n\nfunction fetch(done) {\n  var that = this;\n\n  this._table._base.runAction('get', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, null, function (err, response, results) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    that.setRawJson(results);\n    done(null, that);\n  });\n}\n\nRecord.prototype.setRawJson = function (rawJson) {\n  this._rawJson = rawJson;\n  this.fields = this._rawJson && this._rawJson.fields || {};\n};\n\nmodule.exports = Record;","map":null,"metadata":{},"sourceType":"script"}