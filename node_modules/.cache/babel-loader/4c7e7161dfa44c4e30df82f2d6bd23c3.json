{"ast":null,"code":"import _slicedToArray from \"/Users/wipawe.sirikolkarn/develop/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/wipawe.sirikolkarn/develop/portfolio/src/packages/archive/Archive.js\";\nimport React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-css';\nimport styles from './archive.module.scss';\nimport classNames from 'classnames';\n\nvar Airtable = require('airtable');\n\nconst Archive = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        content = _useState2[0],\n        setContent = _useState2[1];\n\n  const breakpointColumnsObj = {\n    default: 3,\n    1200: 3,\n    1000: 2,\n    500: 1\n  };\n  var allContent = [];\n\n  const retrieveContent = () => {\n    var base = new Airtable({\n      apiKey: 'keywJEKrRFRrPEmMI'\n    }).base('appS0UCDSYim1dOsM');\n    base('Work').select().eachPage(function page(records, fetchNextPage) {\n      records.forEach(function (record) {\n        let type = record.get('type');\n\n        if (type === \"archive\") {\n          allContent.push(record);\n        }\n      });\n      fetchNextPage();\n    }, function done(err) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      setContent(allContent);\n    });\n  };\n\n  useEffect(() => {\n    retrieveContent();\n  }, []);\n\n  const GenerateContent = () => {\n    let masonry = [];\n    content.map((item, index) => {\n      if (item.fields.attachments) {\n        let src = item.fields.attachments[0].url;\n        let title = item.fields.title;\n        let description = item.fields.description;\n        masonry.push(React.createElement(\"div\", {\n          className: styles.tile,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, description)), React.createElement(\"img\", {\n          key: index,\n          src: src,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        })));\n      }\n    });\n    return React.createElement(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: styles.grid,\n      columnClassName: styles.column,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, masonry);\n  };\n\n  return React.createElement(GenerateContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  });\n};\n\nexport default Archive;","map":{"version":3,"sources":["/Users/wipawe.sirikolkarn/develop/portfolio/src/packages/archive/Archive.js"],"names":["React","useState","useEffect","Masonry","styles","classNames","Airtable","require","Archive","content","setContent","breakpointColumnsObj","default","allContent","retrieveContent","base","apiKey","select","eachPage","page","records","fetchNextPage","forEach","record","type","get","push","done","err","console","error","GenerateContent","masonry","map","item","index","fields","attachments","src","url","title","description","tile","text","grid","column"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport Masonry from 'react-masonry-css'\nimport styles from './archive.module.scss';\nimport classNames from 'classnames';\n\nvar Airtable = require('airtable');\n\nconst Archive = () => {\n\n\tconst [ content, setContent ] = useState([]);\n\tconst breakpointColumnsObj = {\n\t  default: 3,\n\t  1200: 3,\n\t  1000: 2,\n\t  500: 1\n\t};\n\n\tvar allContent = [];\n\n\tconst retrieveContent = () => {\n\t\t\n\t\tvar base = new Airtable({apiKey: 'keywJEKrRFRrPEmMI'}).base('appS0UCDSYim1dOsM');\n\t\tbase('Work').select().eachPage(function page(records, fetchNextPage) {\n\n\t\t    records.forEach(function(record) {\n\t\t    \tlet type = record.get('type');\n\t\t    \tif (type === \"archive\") {\n\t\t    \t\tallContent.push(record);\n\t\t    \t}\n\t\t    });\n\n\t\t    fetchNextPage();\n\n\t\t}, function done(err) {\n\t\t    if (err) { console.error(err); return; }\n\t\t    setContent(allContent);\n\n\t\t});\n\t}\t\n\n\tuseEffect(() => {\n\t\tretrieveContent();\n\t}, []);\n\t\n\tconst GenerateContent = () => {\n\t\tlet masonry = [];\n\n\t\tcontent.map((item, index) => {\n\t\t\tif (item.fields.attachments) {\n\t\t\t\tlet src = item.fields.attachments[0].url;\n\t\t\t\tlet title = item.fields.title;\n\t\t\t\tlet description = item.fields.description;\n\t\t\t\tmasonry.push( \n\t\t\t\t\t<div className={styles.tile}>\n\t\t\t\t\t\t<div className={styles.text}>\n\t\t\t\t\t\t\t<p>{title}</p>\n\t\t\t\t\t\t\t<p>{description}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<img key={index} src={src}/> \n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t})\n\n\t\treturn (\n\t\t\t<Masonry\n\t\t\t  breakpointCols={breakpointColumnsObj}\n\t\t\t  className={styles.grid}\n\t\t\t  columnClassName={styles.column}>\n\t  \t\t\t{masonry}\n\t  \t\t</Masonry>\n\t\t)\n\n\t}\n\n\treturn (\n\t\t<GenerateContent />\n\t)\n}\n\nexport default Archive;"]},"metadata":{},"sourceType":"module"}