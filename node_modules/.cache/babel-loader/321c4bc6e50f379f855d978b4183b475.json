{"ast":null,"code":"var _jsxFileName = \"/Users/wipawe.sirikolkarn/development/portfolio/src/packages/archive/Archive.js\";\nimport React from 'react';\n\nvar Airtable = require('airtable');\n\nconst Archive = () => {\n  var base = new Airtable({\n    apiKey: 'keywJEKrRFRrPEmMI'\n  }).base('appS0UCDSYim1dOsM');\n  base('Work').select().eachPage(function page(records, fetchNextPage) {\n    records.forEach(function (record) {\n      let type = record.get('type');\n\n      if (type === \"archive\") {\n        console.log('Retrieved', record.get('title'));\n      }\n    });\n    fetchNextPage();\n  }, function done(err) {\n    if (err) {\n      console.error(err);\n      return;\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"hi\");\n};\n\nexport default Archive;","map":{"version":3,"sources":["/Users/wipawe.sirikolkarn/development/portfolio/src/packages/archive/Archive.js"],"names":["React","Airtable","require","Archive","base","apiKey","select","eachPage","page","records","fetchNextPage","forEach","record","type","get","console","log","done","err","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAErB,MAAIC,IAAI,GAAG,IAAIH,QAAJ,CAAa;AAACI,IAAAA,MAAM,EAAE;AAAT,GAAb,EAA4CD,IAA5C,CAAiD,mBAAjD,CAAX;AACAA,EAAAA,IAAI,CAAC,MAAD,CAAJ,CAAaE,MAAb,GAAsBC,QAAtB,CAA+B,SAASC,IAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsC;AAEjED,IAAAA,OAAO,CAACE,OAAR,CAAgB,UAASC,MAAT,EAAiB;AAChC,UAAIC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAW,MAAX,CAAX;;AAEA,UAAID,IAAI,KAAK,SAAb,EAAwB;AACvBE,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,MAAM,CAACE,GAAP,CAAW,OAAX,CAAzB;AACA;AAED,KAPD;AASAJ,IAAAA,aAAa;AAEhB,GAbD,EAaG,SAASO,IAAT,CAAcC,GAAd,EAAmB;AAClB,QAAIA,GAAJ,EAAS;AAAEH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AAAoB;AAAS;AAC3C,GAfD;AAiBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CArBD;;AAuBA,eAAef,OAAf","sourcesContent":["import React from 'react'; \n\nvar Airtable = require('airtable');\n\nconst Archive = () => {\n\t\n\tvar base = new Airtable({apiKey: 'keywJEKrRFRrPEmMI'}).base('appS0UCDSYim1dOsM');\n\tbase('Work').select().eachPage(function page(records, fetchNextPage) {\n\n\t    records.forEach(function(record) {\n\t    \tlet type = record.get('type');\n\n\t    \tif (type === \"archive\") {\n\t    \t\tconsole.log('Retrieved', record.get('title'));\n\t    \t}\n\t        \n\t    });\n\n\t    fetchNextPage();\n\n\t}, function done(err) {\n\t    if (err) { console.error(err); return; }\n\t});\n\n\treturn <div>hi</div>\n}\n\nexport default Archive;"]},"metadata":{},"sourceType":"module"}